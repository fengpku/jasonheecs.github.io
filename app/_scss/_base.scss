@mixin text-shadow(
  $shadow-1 : default
  // $shadow-2 : false,
  // $shadow-3 : false,
  // $shadow-4 : false
  // $shadow-5 : false,
  // $shadow-6 : false,
  // $shadow-7 : false,
  // $shadow-8 : false,
  // $shadow-9 : false,
  // $shadow-10: false
) {
  @if $shadow-1 == default {
    $shadow-1: $default-text-shadow-h-offset $default-text-shadow-v-offset $default-text-shadow-blur $default-text-shadow-spread $default-text-shadow-color;
  }
  $shadows-without-spread: join((),(),comma);
  $shadows: join((),(),comma);
  $has-spread: false;

  $shadows-without-spread: append($shadows-without-spread, $shadow-1);
  $shadows: append($shadows, $shadow-1);
    
  @if $has-spread {
    text-shadow: $shadows-without-spread;
  }
  text-shadow: $shadows;
}

@function shadow($s-color,$s-start,$s-width) {
  $output: '';
  $a: $s-start;
  $x: $a;
  $y: $a;
  $i: 0.0025em;
  $s-size: $s-width + $s-start;
  @while  $x < ($s-size + $i) {
    $output: $output + '#{$x} #{$y} 0 #{$s-color}';
    @if ($s-size + 0) >=  $x {
      $output: $output + ', ';
    }
    $y: $y + $i;
    $x: $x + $i;
  }
  @return unquote($output);
}

::selection { 
	@include text-shadow(shadow( lighten($color-secondary, 70%),0,0.1em));
}

* {
	box-sizing: border-box;
}

html {
	font-size: 90%;

	@media screen and (min-width: $mq-medium) {
		font-size: 95%;
	}

	@media screen and (min-width: $mq-large) {
		font-size: 100%;
	}
}

body {
	background: $color-primary;
	//scss-lint:disable DuplicateProperty, ColorVariable
	background: linear-gradient(to bottom, #fff 0%, #f5f5f5 120%);
	color: $color-secondary;
	font-family: $font-primary;
}

a {
	color: lighten($color-secondary, 15%);
	outline: none;
}
